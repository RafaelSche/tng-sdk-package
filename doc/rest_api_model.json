{"definitions": {"PingGetReturn": {"properties": {"alive_since": {"description": "system uptime", "type": "string"}}, "required": ["alive_since"], "type": "object"}, "PackagesStatusListGetReturn": {"properties": {"package_processes": {"items": {"$ref": "#/definitions/PackagesStatusItemGetReturn"}, "type": "array"}}, "type": "object"}, "PackagesStatusItemGetReturn": {"properties": {"error_msg": {"description": "More detailed error message.", "type": "string"}, "status": {"description": "Status of the unpacking process: waiting|runnig|failed|done", "type": "string"}, "package_process_uuid": {"description": "UUID of started unpackaging process.", "type": "string"}}, "required": ["package_process_uuid", "status"], "type": "object"}}, "info": {"title": "5GTANGO tng-package API", "version": "0.1", "description": "5GTANGO tng-package REST API to package/unpacke NFV packages."}, "paths": {"/v1/packages": {"post": {"consumes": ["multipart/form-data"], "operationId": "post_packages", "parameters": [{"required": true, "description": "Uploaded package file", "in": "formData", "name": "package", "type": "file"}, {"description": "URL called after unpackaging (optional)", "in": "formData", "name": "callback_url", "type": "string"}, {"description": "Username of the uploader (optional)", "in": "formData", "name": "username", "type": "string"}, {"description": "Layer tag to be unpackaged (optional)", "in": "formData", "name": "layer", "type": "string"}, {"in": "formData", "description": "Package format (optional)", "default": "eu.5gtango", "name": "format", "type": "string"}, {"in": "formData", "description": "Skip catalog upload of contents (optional)", "default": false, "name": "skip_store", "type": "boolean"}, {"in": "formData", "description": "Skip service validation (optional)", "default": false, "name": "skip_validation", "type": "boolean"}, {"description": "Workspace (ignored for now)", "in": "formData", "name": "workspace", "type": "string"}, {"description": "Output (ignored for now)", "in": "formData", "name": "output", "type": "string"}, {"format": "mask", "description": "An optional fields mask", "in": "header", "name": "X-Fields", "type": "string"}], "responses": {"400": {"description": "Bad package: Could not unpackage given package."}, "200": {"schema": {"$ref": "#/definitions/PackagesStatusItemGetReturn"}, "description": "Success"}}, "tags": ["v1"]}}, "/v1/packages/status": {"get": {"operationId": "get_packages_status_list", "parameters": [{"format": "mask", "description": "An optional fields mask", "in": "header", "name": "X-Fields", "type": "string"}], "responses": {"200": {"schema": {"$ref": "#/definitions/PackagesStatusListGetReturn"}, "description": "Success"}}, "tags": ["v1"]}}, "/v1/packages/status/{package_process_uuid}": {"parameters": [{"required": true, "name": "package_process_uuid", "in": "path", "type": "string"}], "get": {"operationId": "get_packages_status_item", "parameters": [{"format": "mask", "description": "An optional fields mask", "in": "header", "name": "X-Fields", "type": "string"}], "responses": {"200": {"schema": {"$ref": "#/definitions/PackagesStatusItemGetReturn"}, "description": "Success"}, "404": {"description": "Package process not found."}}, "tags": ["v1"]}}, "/v1/pings": {"get": {"operationId": "get_ping", "parameters": [{"format": "mask", "description": "An optional fields mask", "in": "header", "name": "X-Fields", "type": "string"}], "responses": {"200": {"schema": {"$ref": "#/definitions/PingGetReturn"}, "description": "Success"}}, "tags": ["v1"]}}, "/v1/projects": {"post": {"consumes": ["multipart/form-data"], "operationId": "post_project", "parameters": [{"required": true, "description": "Uploaded project archive", "in": "formData", "name": "project", "type": "file"}], "responses": {"200": {"description": "Success"}}, "tags": ["v1"]}}}, "tags": [{"name": "default", "description": "Default namespace"}, {"name": "v1", "description": "tng-package API v1"}], "basePath": "http://tng-package.5gtango.eu/api", "consumes": ["application/json"], "host": "tng-package.5gtango.eu", "swagger": "2.0", "produces": ["application/json"], "responses": {"ParseError": {"description": "When a mask can't be parsed"}, "MaskError": {"description": "When any error occurs on mask"}}}